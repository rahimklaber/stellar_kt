// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * TransactionV0Envelope's original definition in the XDR file is:
 * ```
 * struct TransactionV0Envelope
{
TransactionV0 tx;
/* Each decorated signature is a signature over the SHA256 hash of
 * a TransactionSignaturePayload */
DecoratedSignature signatures<20>;
};
 * ```
 */
data class TransactionV0Envelope(
    val tx: TransactionV0,
    val signatures: List<DecoratedSignature>,
) : XdrElement {
    override fun encode(stream: XdrOutputStream) {
        tx.encode(stream)
        val signaturesSize = signatures.size
        stream.writeInt(signaturesSize)
        signatures.encodeXdrElements(stream)
    }

    companion object : XdrElementDecoder<TransactionV0Envelope> {
        override fun decode(stream: XdrInputStream): TransactionV0Envelope {
            val tx = TransactionV0.decode(stream)
            val signaturesSize = stream.readInt()
            val signatures: List<DecoratedSignature> = decodeXdrElementsList(signaturesSize, stream, DecoratedSignature.decoder())
            return TransactionV0Envelope(
                tx,
                signatures,
            )
        }
    }
}
