// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * ContractCodeCostInputs's original definition in the XDR file is:
 * ```
 * struct ContractCodeCostInputs {
ExtensionPoint ext;
uint32 nInstructions;
uint32 nFunctions;
uint32 nGlobals;
uint32 nTableEntries;
uint32 nTypes;
uint32 nDataSegments;
uint32 nElemSegments;
uint32 nImports;
uint32 nExports;
uint32 nDataSegmentBytes;
};
 * ```
 */
data class ContractCodeCostInputs(
    val ext: ExtensionPoint,
    val nInstructions: Uint32,
    val nFunctions: Uint32,
    val nGlobals: Uint32,
    val nTableEntries: Uint32,
    val nTypes: Uint32,
    val nDataSegments: Uint32,
    val nElemSegments: Uint32,
    val nImports: Uint32,
    val nExports: Uint32,
    val nDataSegmentBytes: Uint32,
) : XdrElement {
    override fun encode(stream: XdrOutputStream) {
        ext.encode(stream)
        nInstructions.encode(stream)
        nFunctions.encode(stream)
        nGlobals.encode(stream)
        nTableEntries.encode(stream)
        nTypes.encode(stream)
        nDataSegments.encode(stream)
        nElemSegments.encode(stream)
        nImports.encode(stream)
        nExports.encode(stream)
        nDataSegmentBytes.encode(stream)
    }

    companion object : XdrElementDecoder<ContractCodeCostInputs> {
        override fun decode(stream: XdrInputStream): ContractCodeCostInputs {
            val ext = ExtensionPoint.decode(stream)
            val nInstructions = me.rahimklaber.stellar.base.xdr.Uint32.decode(stream)
            val nFunctions = me.rahimklaber.stellar.base.xdr.Uint32.decode(stream)
            val nGlobals = me.rahimklaber.stellar.base.xdr.Uint32.decode(stream)
            val nTableEntries = me.rahimklaber.stellar.base.xdr.Uint32.decode(stream)
            val nTypes = me.rahimklaber.stellar.base.xdr.Uint32.decode(stream)
            val nDataSegments = me.rahimklaber.stellar.base.xdr.Uint32.decode(stream)
            val nElemSegments = me.rahimklaber.stellar.base.xdr.Uint32.decode(stream)
            val nImports = me.rahimklaber.stellar.base.xdr.Uint32.decode(stream)
            val nExports = me.rahimklaber.stellar.base.xdr.Uint32.decode(stream)
            val nDataSegmentBytes = me.rahimklaber.stellar.base.xdr.Uint32.decode(stream)
            return ContractCodeCostInputs(
                ext,
                nInstructions,
                nFunctions,
                nGlobals,
                nTableEntries,
                nTypes,
                nDataSegments,
                nElemSegments,
                nImports,
                nExports,
                nDataSegmentBytes,
            )
        }
    }
}
