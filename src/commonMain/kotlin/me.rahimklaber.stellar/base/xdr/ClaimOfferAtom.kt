// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * ClaimOfferAtom's original definition in the XDR file is:
 * ```
 * struct ClaimOfferAtom
{
// emitted to identify the offer
AccountID sellerID; // Account that owns the offer
int64 offerID;

// amount and asset taken from the owner
Asset assetSold;
int64 amountSold;

// amount and asset sent to the owner
Asset assetBought;
int64 amountBought;
};
 * ```
 */
data class ClaimOfferAtom(
    val sellerID: AccountID,
    val offerID: Int64,
    val assetSold: Asset,
    val amountSold: Int64,
    val assetBought: Asset,
    val amountBought: Int64,
) : XdrElement {
    override fun encode(stream: XdrOutputStream) {
        sellerID.encode(stream)
        offerID.encode(stream)
        assetSold.encode(stream)
        amountSold.encode(stream)
        assetBought.encode(stream)
        amountBought.encode(stream)
    }

    companion object : XdrElementDecoder<ClaimOfferAtom> {
        override fun decode(stream: XdrInputStream): ClaimOfferAtom {
            val sellerID = AccountID.decode(stream)
            val offerID = me.rahimklaber.stellar.base.xdr.Int64.decode(stream)
            val assetSold = Asset.decode(stream)
            val amountSold = me.rahimklaber.stellar.base.xdr.Int64.decode(stream)
            val assetBought = Asset.decode(stream)
            val amountBought = me.rahimklaber.stellar.base.xdr.Int64.decode(stream)
            return ClaimOfferAtom(
                sellerID,
                offerID,
                assetSold,
                amountSold,
                assetBought,
                amountBought,
            )
        }
    }
}
