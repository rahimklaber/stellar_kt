// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * SCPHistoryEntry's original definition in the XDR file is:
 * ```
 * union SCPHistoryEntry switch (int v)
{
case 0:
SCPHistoryEntryV0 v0;
};
 * ```
 */
sealed class SCPHistoryEntry(val type: Int) : XdrElement {
    fun v0OrNull(): SCPHistoryEntryV0? = if (this is SCPHistoryEntryV0) this else null
    data class SCPHistoryEntryV0(
        val v0: me.rahimklaber.stellar.base.xdr.SCPHistoryEntryV0,
    ) : SCPHistoryEntry(0) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
            v0.encode(stream)
        }
    }

    companion object : XdrElementDecoder<SCPHistoryEntry> {
        override fun decode(stream: XdrInputStream): SCPHistoryEntry {
            return when (val type = Int.decode(stream)) {
                0 -> {
                    val v0 = me.rahimklaber.stellar.base.xdr.SCPHistoryEntryV0.decode(stream)
                    SCPHistoryEntryV0(v0)
                }

                else -> throw IllegalArgumentException("unknown type: $type")
            }
        }
    }
}
