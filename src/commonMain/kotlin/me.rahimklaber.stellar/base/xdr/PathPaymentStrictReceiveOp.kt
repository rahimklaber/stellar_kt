// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * PathPaymentStrictReceiveOp's original definition in the XDR file is:
 * ```
 * struct PathPaymentStrictReceiveOp
{
Asset sendAsset; // asset we pay with
int64 sendMax;   // the maximum amount of sendAsset to
// send (excluding fees).
// The operation will fail if can't be met

MuxedAccount destination; // recipient of the payment
Asset destAsset;          // what they end up with
int64 destAmount;         // amount they end up with

Asset path<5>; // additional hops it must go through to get there
};
 * ```
 */
data class PathPaymentStrictReceiveOp(
    val sendAsset: Asset,
    val sendMax: Int64,
    val destination: MuxedAccount,
    val destAsset: Asset,
    val destAmount: Int64,
    val path: List<Asset>,
) : XdrElement {
    override fun encode(stream: XdrOutputStream) {
        sendAsset.encode(stream)
        sendMax.encode(stream)
        destination.encode(stream)
        destAsset.encode(stream)
        destAmount.encode(stream)
        val pathSize = path.size
        stream.writeInt(pathSize)
        path.encodeXdrElements(stream)
    }

    companion object : XdrElementDecoder<PathPaymentStrictReceiveOp> {
        override fun decode(stream: XdrInputStream): PathPaymentStrictReceiveOp {
            val sendAsset = Asset.decode(stream)
            val sendMax = me.rahimklaber.stellar.base.xdr.Int64.decode(stream)
            val destination = MuxedAccount.decode(stream)
            val destAsset = Asset.decode(stream)
            val destAmount = me.rahimklaber.stellar.base.xdr.Int64.decode(stream)
            val pathSize = stream.readInt()
            val path: List<Asset> = decodeXdrElementsList(pathSize, stream, Asset.decoder())
            return PathPaymentStrictReceiveOp(
                sendAsset,
                sendMax,
                destination,
                destAsset,
                destAmount,
                path,
            )
        }
    }
}
