// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * ExtendFootprintTTLResult's original definition in the XDR file is:
 * ```
 * union ExtendFootprintTTLResult switch (ExtendFootprintTTLResultCode code)
{
case EXTEND_FOOTPRINT_TTL_SUCCESS:
void;
case EXTEND_FOOTPRINT_TTL_MALFORMED:
case EXTEND_FOOTPRINT_TTL_RESOURCE_LIMIT_EXCEEDED:
case EXTEND_FOOTPRINT_TTL_INSUFFICIENT_REFUNDABLE_FEE:
void;
};
 * ```
 */
sealed class ExtendFootprintTTLResult(val type: ExtendFootprintTTLResultCode) : XdrElement {
    data object ExtendFootprintTtlSuccess : ExtendFootprintTTLResult(ExtendFootprintTTLResultCode.EXTEND_FOOTPRINT_TTL_SUCCESS) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
        }
    }

    data object ExtendFootprintTtlMalformed : ExtendFootprintTTLResult(ExtendFootprintTTLResultCode.EXTEND_FOOTPRINT_TTL_MALFORMED) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
        }
    }

    data object ExtendFootprintTtlResourceLimitExceeded :
        ExtendFootprintTTLResult(ExtendFootprintTTLResultCode.EXTEND_FOOTPRINT_TTL_RESOURCE_LIMIT_EXCEEDED) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
        }
    }

    data object ExtendFootprintTtlInsufficientRefundableFee :
        ExtendFootprintTTLResult(ExtendFootprintTTLResultCode.EXTEND_FOOTPRINT_TTL_INSUFFICIENT_REFUNDABLE_FEE) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
        }
    }

    companion object : XdrElementDecoder<ExtendFootprintTTLResult> {
        override fun decode(stream: XdrInputStream): ExtendFootprintTTLResult {
            return when (val type = ExtendFootprintTTLResultCode.decode(stream)) {
                ExtendFootprintTTLResultCode.EXTEND_FOOTPRINT_TTL_SUCCESS -> ExtendFootprintTtlSuccess
                ExtendFootprintTTLResultCode.EXTEND_FOOTPRINT_TTL_MALFORMED -> ExtendFootprintTtlMalformed
                ExtendFootprintTTLResultCode.EXTEND_FOOTPRINT_TTL_RESOURCE_LIMIT_EXCEEDED -> ExtendFootprintTtlResourceLimitExceeded
                ExtendFootprintTTLResultCode.EXTEND_FOOTPRINT_TTL_INSUFFICIENT_REFUNDABLE_FEE -> ExtendFootprintTtlInsufficientRefundableFee
                else -> throw IllegalArgumentException("unknown type: $type")
            }
        }
    }
}
