// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * InvokeHostFunctionSuccessPreImage's original definition in the XDR file is:
 * ```
 * struct InvokeHostFunctionSuccessPreImage
{
SCVal returnValue;
ContractEvent events<>;
};
 * ```
 */
data class InvokeHostFunctionSuccessPreImage(
    val returnValue: SCVal,
    val events: List<ContractEvent>,
) : XdrElement {
    override fun encode(stream: XdrOutputStream) {
        returnValue.encode(stream)
        val eventsSize = events.size
        stream.writeInt(eventsSize)
        events.encodeXdrElements(stream)
    }

    companion object : XdrElementDecoder<InvokeHostFunctionSuccessPreImage> {
        override fun decode(stream: XdrInputStream): InvokeHostFunctionSuccessPreImage {
            val returnValue = SCVal.decode(stream)
            val eventsSize = stream.readInt()
            val events: List<ContractEvent> = decodeXdrElementsList(eventsSize, stream, ContractEvent.decoder())
            return InvokeHostFunctionSuccessPreImage(
                returnValue,
                events,
            )
        }
    }
}
