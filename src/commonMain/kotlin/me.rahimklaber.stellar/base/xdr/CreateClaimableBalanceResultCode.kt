// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * CreateClaimableBalanceResultCode's original definition in the XDR file is:
 * ```
 * enum CreateClaimableBalanceResultCode
{
CREATE_CLAIMABLE_BALANCE_SUCCESS = 0,
CREATE_CLAIMABLE_BALANCE_MALFORMED = -1,
CREATE_CLAIMABLE_BALANCE_LOW_RESERVE = -2,
CREATE_CLAIMABLE_BALANCE_NO_TRUST = -3,
CREATE_CLAIMABLE_BALANCE_NOT_AUTHORIZED = -4,
CREATE_CLAIMABLE_BALANCE_UNDERFUNDED = -5
};
 * ```
 */
enum class CreateClaimableBalanceResultCode(val value: Int) : XdrElement {
    CREATE_CLAIMABLE_BALANCE_SUCCESS(0),
    CREATE_CLAIMABLE_BALANCE_MALFORMED(-1),
    CREATE_CLAIMABLE_BALANCE_LOW_RESERVE(-2),
    CREATE_CLAIMABLE_BALANCE_NO_TRUST(-3),
    CREATE_CLAIMABLE_BALANCE_NOT_AUTHORIZED(-4),
    CREATE_CLAIMABLE_BALANCE_UNDERFUNDED(-5);

    companion object : XdrElementDecoder<CreateClaimableBalanceResultCode> {
        override fun decode(stream: XdrInputStream): CreateClaimableBalanceResultCode {
            return when (val value = stream.readInt()) {
                0 -> CREATE_CLAIMABLE_BALANCE_SUCCESS
                -1 -> CREATE_CLAIMABLE_BALANCE_MALFORMED
                -2 -> CREATE_CLAIMABLE_BALANCE_LOW_RESERVE
                -3 -> CREATE_CLAIMABLE_BALANCE_NO_TRUST
                -4 -> CREATE_CLAIMABLE_BALANCE_NOT_AUTHORIZED
                -5 -> CREATE_CLAIMABLE_BALANCE_UNDERFUNDED
                else -> throw IllegalArgumentException("Unknown enum value: " + value)
            }
        }
    }

    override fun encode(stream: XdrOutputStream) {
        stream.writeInt(value)
    }
}
