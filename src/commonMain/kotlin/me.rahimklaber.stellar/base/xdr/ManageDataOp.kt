// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * ManageDataOp's original definition in the XDR file is:
 * ```
 * struct ManageDataOp
{
string64 dataName;
DataValue* dataValue; // set to null to clear
};
 * ```
 */
data class ManageDataOp(
    val dataName: String64,
    val dataValue: DataValue?,
) : XdrElement {
    override fun encode(stream: XdrOutputStream) {
        dataName.encode(stream)
        if (dataValue != null) {
            stream.writeInt(1)
            dataValue.encode(stream)
        } else {
            stream.writeInt(0)
        }
    }

    companion object : XdrElementDecoder<ManageDataOp> {
        override fun decode(stream: XdrInputStream): ManageDataOp {
            val dataName = String64.decode(stream)
            val dataValuePresent = stream.readInt()
            val dataValue = if (dataValuePresent != 0) {
                DataValue.decode(stream)
            } else {
                null
            }
            return ManageDataOp(
                dataName,
                dataValue,
            )
        }
    }
}
