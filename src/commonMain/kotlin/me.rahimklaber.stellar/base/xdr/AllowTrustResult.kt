// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * AllowTrustResult's original definition in the XDR file is:
 * ```
 * union AllowTrustResult switch (AllowTrustResultCode code)
{
case ALLOW_TRUST_SUCCESS:
void;
case ALLOW_TRUST_MALFORMED:
case ALLOW_TRUST_NO_TRUST_LINE:
case ALLOW_TRUST_TRUST_NOT_REQUIRED:
case ALLOW_TRUST_CANT_REVOKE:
case ALLOW_TRUST_SELF_NOT_ALLOWED:
case ALLOW_TRUST_LOW_RESERVE:
void;
};
 * ```
 */
sealed class AllowTrustResult(val type: AllowTrustResultCode) : XdrElement {
    data object AllowTrustSuccess : AllowTrustResult(AllowTrustResultCode.ALLOW_TRUST_SUCCESS) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
        }
    }

    data object AllowTrustMalformed : AllowTrustResult(AllowTrustResultCode.ALLOW_TRUST_MALFORMED) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
        }
    }

    data object AllowTrustNoTrustLine : AllowTrustResult(AllowTrustResultCode.ALLOW_TRUST_NO_TRUST_LINE) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
        }
    }

    data object AllowTrustTrustNotRequired : AllowTrustResult(AllowTrustResultCode.ALLOW_TRUST_TRUST_NOT_REQUIRED) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
        }
    }

    data object AllowTrustCantRevoke : AllowTrustResult(AllowTrustResultCode.ALLOW_TRUST_CANT_REVOKE) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
        }
    }

    data object AllowTrustSelfNotAllowed : AllowTrustResult(AllowTrustResultCode.ALLOW_TRUST_SELF_NOT_ALLOWED) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
        }
    }

    data object AllowTrustLowReserve : AllowTrustResult(AllowTrustResultCode.ALLOW_TRUST_LOW_RESERVE) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
        }
    }

    companion object : XdrElementDecoder<AllowTrustResult> {
        override fun decode(stream: XdrInputStream): AllowTrustResult {
            return when (val type = AllowTrustResultCode.decode(stream)) {
                AllowTrustResultCode.ALLOW_TRUST_SUCCESS -> AllowTrustSuccess
                AllowTrustResultCode.ALLOW_TRUST_MALFORMED -> AllowTrustMalformed
                AllowTrustResultCode.ALLOW_TRUST_NO_TRUST_LINE -> AllowTrustNoTrustLine
                AllowTrustResultCode.ALLOW_TRUST_TRUST_NOT_REQUIRED -> AllowTrustTrustNotRequired
                AllowTrustResultCode.ALLOW_TRUST_CANT_REVOKE -> AllowTrustCantRevoke
                AllowTrustResultCode.ALLOW_TRUST_SELF_NOT_ALLOWED -> AllowTrustSelfNotAllowed
                AllowTrustResultCode.ALLOW_TRUST_LOW_RESERVE -> AllowTrustLowReserve
                else -> throw IllegalArgumentException("unknown type: $type")
            }
        }
    }
}
