// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * LedgerFootprint's original definition in the XDR file is:
 * ```
 * struct LedgerFootprint
{
LedgerKey readOnly<>;
LedgerKey readWrite<>;
};
 * ```
 */
data class LedgerFootprint(
    val readOnly: List<LedgerKey>,
    val readWrite: List<LedgerKey>,
) : XdrElement {
    override fun encode(stream: XdrOutputStream) {
        val readOnlySize = readOnly.size
        stream.writeInt(readOnlySize)
        readOnly.encodeXdrElements(stream)
        val readWriteSize = readWrite.size
        stream.writeInt(readWriteSize)
        readWrite.encodeXdrElements(stream)
    }

    companion object : XdrElementDecoder<LedgerFootprint> {
        override fun decode(stream: XdrInputStream): LedgerFootprint {
            val readOnlySize = stream.readInt()
            val readOnly: List<LedgerKey> = decodeXdrElementsList(readOnlySize, stream, LedgerKey.decoder())
            val readWriteSize = stream.readInt()
            val readWrite: List<LedgerKey> = decodeXdrElementsList(readWriteSize, stream, LedgerKey.decoder())
            return LedgerFootprint(
                readOnly,
                readWrite,
            )
        }
    }
}
