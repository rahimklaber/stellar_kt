// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * PaymentOp's original definition in the XDR file is:
 * ```
 * struct PaymentOp
{
MuxedAccount destination; // recipient of the payment
Asset asset;              // what they end up with
int64 amount;             // amount they end up with
};
 * ```
 */
data class PaymentOp(
    val destination: MuxedAccount,
    val asset: Asset,
    val amount: Int64,
) : XdrElement {
    override fun encode(stream: XdrOutputStream) {
        destination.encode(stream)
        asset.encode(stream)
        amount.encode(stream)
    }

    companion object : XdrElementDecoder<PaymentOp> {
        override fun decode(stream: XdrInputStream): PaymentOp {
            val destination = MuxedAccount.decode(stream)
            val asset = Asset.decode(stream)
            val amount = me.rahimklaber.stellar.base.xdr.Int64.decode(stream)
            return PaymentOp(
                destination,
                asset,
                amount,
            )
        }
    }
}
