// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * PublicKey's original definition in the XDR file is:
 * ```
 * union PublicKey switch (PublicKeyType type)
{
case PUBLIC_KEY_TYPE_ED25519:
uint256 ed25519;
};
 * ```
 */
sealed class PublicKey(val type: PublicKeyType) : XdrElement {
    fun ed25519OrNull(): Ed25519? = if (this is Ed25519) this else null
    data class Ed25519(
        val ed25519: Uint256,
    ) : PublicKey(PublicKeyType.PUBLIC_KEY_TYPE_ED25519) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
            ed25519.encode(stream)
        }
    }

    companion object : XdrElementDecoder<PublicKey> {
        override fun decode(stream: XdrInputStream): PublicKey {
            return when (val type = PublicKeyType.decode(stream)) {
                PublicKeyType.PUBLIC_KEY_TYPE_ED25519 -> {
                    val ed25519 = Uint256.decode(stream)
                    Ed25519(ed25519)
                }

                else -> throw IllegalArgumentException("unknown type: $type")
            }
        }
    }
}
