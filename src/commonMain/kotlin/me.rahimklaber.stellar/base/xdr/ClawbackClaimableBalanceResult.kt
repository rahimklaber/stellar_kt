// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * ClawbackClaimableBalanceResult's original definition in the XDR file is:
 * ```
 * union ClawbackClaimableBalanceResult switch (
ClawbackClaimableBalanceResultCode code)
{
case CLAWBACK_CLAIMABLE_BALANCE_SUCCESS:
void;
case CLAWBACK_CLAIMABLE_BALANCE_DOES_NOT_EXIST:
case CLAWBACK_CLAIMABLE_BALANCE_NOT_ISSUER:
case CLAWBACK_CLAIMABLE_BALANCE_NOT_CLAWBACK_ENABLED:
void;
};
 * ```
 */
sealed class ClawbackClaimableBalanceResult(val type: ClawbackClaimableBalanceResultCode) : XdrElement {
    data object ClawbackClaimableBalanceSuccess :
        ClawbackClaimableBalanceResult(ClawbackClaimableBalanceResultCode.CLAWBACK_CLAIMABLE_BALANCE_SUCCESS) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
        }
    }

    data object ClawbackClaimableBalanceDoesNotExist :
        ClawbackClaimableBalanceResult(ClawbackClaimableBalanceResultCode.CLAWBACK_CLAIMABLE_BALANCE_DOES_NOT_EXIST) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
        }
    }

    data object ClawbackClaimableBalanceNotIssuer :
        ClawbackClaimableBalanceResult(ClawbackClaimableBalanceResultCode.CLAWBACK_CLAIMABLE_BALANCE_NOT_ISSUER) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
        }
    }

    data object ClawbackClaimableBalanceNotClawbackEnabled :
        ClawbackClaimableBalanceResult(ClawbackClaimableBalanceResultCode.CLAWBACK_CLAIMABLE_BALANCE_NOT_CLAWBACK_ENABLED) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
        }
    }

    companion object : XdrElementDecoder<ClawbackClaimableBalanceResult> {
        override fun decode(stream: XdrInputStream): ClawbackClaimableBalanceResult {
            return when (val type = ClawbackClaimableBalanceResultCode.decode(stream)) {
                ClawbackClaimableBalanceResultCode.CLAWBACK_CLAIMABLE_BALANCE_SUCCESS -> ClawbackClaimableBalanceSuccess
                ClawbackClaimableBalanceResultCode.CLAWBACK_CLAIMABLE_BALANCE_DOES_NOT_EXIST -> ClawbackClaimableBalanceDoesNotExist
                ClawbackClaimableBalanceResultCode.CLAWBACK_CLAIMABLE_BALANCE_NOT_ISSUER -> ClawbackClaimableBalanceNotIssuer
                ClawbackClaimableBalanceResultCode.CLAWBACK_CLAIMABLE_BALANCE_NOT_CLAWBACK_ENABLED -> ClawbackClaimableBalanceNotClawbackEnabled
                else -> throw IllegalArgumentException("unknown type: $type")
            }
        }
    }
}
