// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * SorobanCredentials's original definition in the XDR file is:
 * ```
 * union SorobanCredentials switch (SorobanCredentialsType type)
{
case SOROBAN_CREDENTIALS_SOURCE_ACCOUNT:
void;
case SOROBAN_CREDENTIALS_ADDRESS:
SorobanAddressCredentials address;
};
 * ```
 */
sealed class SorobanCredentials(val type: SorobanCredentialsType) : XdrElement {
    data object SourceAccount : SorobanCredentials(SorobanCredentialsType.SOROBAN_CREDENTIALS_SOURCE_ACCOUNT) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
        }
    }

    fun addressOrNull(): Address? = if (this is Address) this else null
    data class Address(
        val address: SorobanAddressCredentials,
    ) : SorobanCredentials(SorobanCredentialsType.SOROBAN_CREDENTIALS_ADDRESS) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
            address.encode(stream)
        }
    }

    companion object : XdrElementDecoder<SorobanCredentials> {
        override fun decode(stream: XdrInputStream): SorobanCredentials {
            return when (val type = SorobanCredentialsType.decode(stream)) {
                SorobanCredentialsType.SOROBAN_CREDENTIALS_SOURCE_ACCOUNT -> SourceAccount
                SorobanCredentialsType.SOROBAN_CREDENTIALS_ADDRESS -> {
                    val address = SorobanAddressCredentials.decode(stream)
                    Address(address)
                }

                else -> throw IllegalArgumentException("unknown type: $type")
            }
        }
    }
}
