// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * LiquidityPoolConstantProductParameters's original definition in the XDR file is:
 * ```
 * struct LiquidityPoolConstantProductParameters
{
Asset assetA; // assetA < assetB
Asset assetB;
int32 fee; // Fee is in basis points, so the actual rate is (fee/100)%
};
 * ```
 */
data class LiquidityPoolConstantProductParameters(
    val assetA: Asset,
    val assetB: Asset,
    val fee: Int32,
) : XdrElement {
    override fun encode(stream: XdrOutputStream) {
        assetA.encode(stream)
        assetB.encode(stream)
        fee.encode(stream)
    }

    companion object : XdrElementDecoder<LiquidityPoolConstantProductParameters> {
        override fun decode(stream: XdrInputStream): LiquidityPoolConstantProductParameters {
            val assetA = Asset.decode(stream)
            val assetB = Asset.decode(stream)
            val fee = me.rahimklaber.stellar.base.xdr.Int32.decode(stream)
            return LiquidityPoolConstantProductParameters(
                assetA,
                assetB,
                fee,
            )
        }
    }
}
