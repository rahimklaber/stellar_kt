// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * LiquidityPoolWithdrawResultCode's original definition in the XDR file is:
 * ```
 * enum LiquidityPoolWithdrawResultCode
{
// codes considered as "success" for the operation
LIQUIDITY_POOL_WITHDRAW_SUCCESS = 0,

// codes considered as "failure" for the operation
LIQUIDITY_POOL_WITHDRAW_MALFORMED = -1,    // bad input
LIQUIDITY_POOL_WITHDRAW_NO_TRUST = -2,     // no trust line for one of the
// assets
LIQUIDITY_POOL_WITHDRAW_UNDERFUNDED = -3,  // not enough balance of the
// pool share
LIQUIDITY_POOL_WITHDRAW_LINE_FULL = -4,    // would go above limit for one
// of the assets
LIQUIDITY_POOL_WITHDRAW_UNDER_MINIMUM = -5 // didn't withdraw enough
};
 * ```
 */
enum class LiquidityPoolWithdrawResultCode(val value: Int) : XdrElement {
    LIQUIDITY_POOL_WITHDRAW_SUCCESS(0),
    LIQUIDITY_POOL_WITHDRAW_MALFORMED(-1),
    LIQUIDITY_POOL_WITHDRAW_NO_TRUST(-2),
    LIQUIDITY_POOL_WITHDRAW_UNDERFUNDED(-3),
    LIQUIDITY_POOL_WITHDRAW_LINE_FULL(-4),
    LIQUIDITY_POOL_WITHDRAW_UNDER_MINIMUM(-5);

    companion object : XdrElementDecoder<LiquidityPoolWithdrawResultCode> {
        override fun decode(stream: XdrInputStream): LiquidityPoolWithdrawResultCode {
            return when (val value = stream.readInt()) {
                0 -> LIQUIDITY_POOL_WITHDRAW_SUCCESS
                -1 -> LIQUIDITY_POOL_WITHDRAW_MALFORMED
                -2 -> LIQUIDITY_POOL_WITHDRAW_NO_TRUST
                -3 -> LIQUIDITY_POOL_WITHDRAW_UNDERFUNDED
                -4 -> LIQUIDITY_POOL_WITHDRAW_LINE_FULL
                -5 -> LIQUIDITY_POOL_WITHDRAW_UNDER_MINIMUM
                else -> throw IllegalArgumentException("Unknown enum value: " + value)
            }
        }
    }

    override fun encode(stream: XdrOutputStream) {
        stream.writeInt(value)
    }
}
