// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * TimeSlicedPeerData's original definition in the XDR file is:
 * ```
 * struct TimeSlicedPeerData
{
PeerStats peerStats;
uint32 averageLatencyMs;
};
 * ```
 */
data class TimeSlicedPeerData(
    val peerStats: PeerStats,
    val averageLatencyMs: Uint32,
) : XdrElement {
    override fun encode(stream: XdrOutputStream) {
        peerStats.encode(stream)
        averageLatencyMs.encode(stream)
    }

    companion object : XdrElementDecoder<TimeSlicedPeerData> {
        override fun decode(stream: XdrInputStream): TimeSlicedPeerData {
            val peerStats = PeerStats.decode(stream)
            val averageLatencyMs = me.rahimklaber.stellar.base.xdr.Uint32.decode(stream)
            return TimeSlicedPeerData(
                peerStats,
                averageLatencyMs,
            )
        }
    }
}
