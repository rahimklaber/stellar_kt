// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * EndSponsoringFutureReservesResult's original definition in the XDR file is:
 * ```
 * union EndSponsoringFutureReservesResult switch (
EndSponsoringFutureReservesResultCode code)
{
case END_SPONSORING_FUTURE_RESERVES_SUCCESS:
void;
case END_SPONSORING_FUTURE_RESERVES_NOT_SPONSORED:
void;
};
 * ```
 */
sealed class EndSponsoringFutureReservesResult(val type: EndSponsoringFutureReservesResultCode) : XdrElement {
    data object EndSponsoringFutureReservesSuccess :
        EndSponsoringFutureReservesResult(EndSponsoringFutureReservesResultCode.END_SPONSORING_FUTURE_RESERVES_SUCCESS) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
        }
    }

    data object EndSponsoringFutureReservesNotSponsored :
        EndSponsoringFutureReservesResult(EndSponsoringFutureReservesResultCode.END_SPONSORING_FUTURE_RESERVES_NOT_SPONSORED) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
        }
    }

    companion object : XdrElementDecoder<EndSponsoringFutureReservesResult> {
        override fun decode(stream: XdrInputStream): EndSponsoringFutureReservesResult {
            return when (val type = EndSponsoringFutureReservesResultCode.decode(stream)) {
                EndSponsoringFutureReservesResultCode.END_SPONSORING_FUTURE_RESERVES_SUCCESS -> EndSponsoringFutureReservesSuccess
                EndSponsoringFutureReservesResultCode.END_SPONSORING_FUTURE_RESERVES_NOT_SPONSORED -> EndSponsoringFutureReservesNotSponsored
                else -> throw IllegalArgumentException("unknown type: $type")
            }
        }
    }
}
