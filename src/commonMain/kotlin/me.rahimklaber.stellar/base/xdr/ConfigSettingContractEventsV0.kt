// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * ConfigSettingContractEventsV0's original definition in the XDR file is:
 * ```
 * struct ConfigSettingContractEventsV0
{
// Maximum size of events that a contract call can emit.
uint32 txMaxContractEventsSizeBytes;
// Fee for generating 1KB of contract events.
int64 feeContractEvents1KB;
};
 * ```
 */
data class ConfigSettingContractEventsV0(
    val txMaxContractEventsSizeBytes: Uint32,
    val feeContractEvents1KB: Int64,
) : XdrElement {
    override fun encode(stream: XdrOutputStream) {
        txMaxContractEventsSizeBytes.encode(stream)
        feeContractEvents1KB.encode(stream)
    }

    companion object : XdrElementDecoder<ConfigSettingContractEventsV0> {
        override fun decode(stream: XdrInputStream): ConfigSettingContractEventsV0 {
            val txMaxContractEventsSizeBytes = me.rahimklaber.stellar.base.xdr.Uint32.decode(stream)
            val feeContractEvents1KB = me.rahimklaber.stellar.base.xdr.Int64.decode(stream)
            return ConfigSettingContractEventsV0(
                txMaxContractEventsSizeBytes,
                feeContractEvents1KB,
            )
        }
    }
}
