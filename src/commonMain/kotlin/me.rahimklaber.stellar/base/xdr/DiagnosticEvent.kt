// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * DiagnosticEvent's original definition in the XDR file is:
 * ```
 * struct DiagnosticEvent
{
bool inSuccessfulContractCall;
ContractEvent event;
};
 * ```
 */
data class DiagnosticEvent(
    val inSuccessfulContractCall: Boolean,
    val event: ContractEvent,
) : XdrElement {
    override fun encode(stream: XdrOutputStream) {
        stream.writeBoolean(inSuccessfulContractCall)
        event.encode(stream)
    }

    companion object : XdrElementDecoder<DiagnosticEvent> {
        override fun decode(stream: XdrInputStream): DiagnosticEvent {
            val inSuccessfulContractCall = stream.readBoolean()
            val event = ContractEvent.decode(stream)
            return DiagnosticEvent(
                inSuccessfulContractCall,
                event,
            )
        }
    }
}
