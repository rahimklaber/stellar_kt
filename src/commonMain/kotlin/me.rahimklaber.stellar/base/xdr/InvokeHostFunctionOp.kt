// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * InvokeHostFunctionOp's original definition in the XDR file is:
 * ```
 * struct InvokeHostFunctionOp
{
// Host function to invoke.
HostFunction hostFunction;
// Per-address authorizations for this host function.
SorobanAuthorizationEntry auth<>;
};
 * ```
 */
data class InvokeHostFunctionOp(
    val hostFunction: HostFunction,
    val auth: List<SorobanAuthorizationEntry>,
) : XdrElement {
    override fun encode(stream: XdrOutputStream) {
        hostFunction.encode(stream)
        val authSize = auth.size
        stream.writeInt(authSize)
        auth.encodeXdrElements(stream)
    }

    companion object : XdrElementDecoder<InvokeHostFunctionOp> {
        override fun decode(stream: XdrInputStream): InvokeHostFunctionOp {
            val hostFunction = HostFunction.decode(stream)
            val authSize = stream.readInt()
            val auth: List<SorobanAuthorizationEntry> = decodeXdrElementsList(authSize, stream, SorobanAuthorizationEntry.decoder())
            return InvokeHostFunctionOp(
                hostFunction,
                auth,
            )
        }
    }
}
