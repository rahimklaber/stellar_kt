// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * TrustLineEntryExtensionV2's original definition in the XDR file is:
 * ```
 * struct TrustLineEntryExtensionV2
{
int32 liquidityPoolUseCount;

union switch (int v)
{
case 0:
void;
}
ext;
};
 * ```
 */
data class TrustLineEntryExtensionV2(
    val liquidityPoolUseCount: Int32,
    val ext: TrustLineEntryExtensionV2Ext,
) : XdrElement {
    override fun encode(stream: XdrOutputStream) {
        liquidityPoolUseCount.encode(stream)
        ext.encode(stream)
    }

    companion object : XdrElementDecoder<TrustLineEntryExtensionV2> {
        override fun decode(stream: XdrInputStream): TrustLineEntryExtensionV2 {
            val liquidityPoolUseCount = me.rahimklaber.stellar.base.xdr.Int32.decode(stream)
            val ext = TrustLineEntryExtensionV2Ext.decode(stream)
            return TrustLineEntryExtensionV2(
                liquidityPoolUseCount,
                ext,
            )
        }
    }

    /**
     * TrustLineEntryExtensionV2Ext's original definition in the XDR file is:
     * ```
     * union switch (int v)
    {
    case 0:
    void;
    }
     * ```
     */
    sealed class TrustLineEntryExtensionV2Ext(val type: Int) : XdrElement {
        data object TrustLineEntryExtensionV2ExtV0 : TrustLineEntryExtensionV2Ext(0) {
            override fun encode(stream: XdrOutputStream) {
                type.encode(stream)
            }
        }

        companion object : XdrElementDecoder<TrustLineEntryExtensionV2Ext> {
            override fun decode(stream: XdrInputStream): TrustLineEntryExtensionV2Ext {
                return when (val type = Int.decode(stream)) {
                    0 -> TrustLineEntryExtensionV2ExtV0
                    else -> throw IllegalArgumentException("unknown type: $type")
                }
            }
        }
    }
}
