// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * GeneralizedTransactionSet's original definition in the XDR file is:
 * ```
 * union GeneralizedTransactionSet switch (int v)
{
// We consider the legacy TransactionSet to be v0.
case 1:
TransactionSetV1 v1TxSet;
};
 * ```
 */
sealed class GeneralizedTransactionSet(val type: Int) : XdrElement {
    fun v1TxSetOrNull(): GeneralizedTransactionSetV1? = if (this is GeneralizedTransactionSetV1) this else null
    data class GeneralizedTransactionSetV1(
        val v1TxSet: TransactionSetV1,
    ) : GeneralizedTransactionSet(1) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
            v1TxSet.encode(stream)
        }
    }

    companion object : XdrElementDecoder<GeneralizedTransactionSet> {
        override fun decode(stream: XdrInputStream): GeneralizedTransactionSet {
            return when (val type = Int.decode(stream)) {
                1 -> {
                    val v1TxSet = TransactionSetV1.decode(stream)
                    GeneralizedTransactionSetV1(v1TxSet)
                }

                else -> throw IllegalArgumentException("unknown type: $type")
            }
        }
    }
}
