// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * RevokeSponsorshipOp's original definition in the XDR file is:
 * ```
 * union RevokeSponsorshipOp switch (RevokeSponsorshipType type)
{
case REVOKE_SPONSORSHIP_LEDGER_ENTRY:
LedgerKey ledgerKey;
case REVOKE_SPONSORSHIP_SIGNER:
struct
{
AccountID accountID;
SignerKey signerKey;
} signer;
};
 * ```
 */
sealed class RevokeSponsorshipOp(val type: RevokeSponsorshipType) : XdrElement {
    fun ledgerKeyOrNull(): LedgerEntry? = if (this is LedgerEntry) this else null
    data class LedgerEntry(
        val ledgerKey: LedgerKey,
    ) : RevokeSponsorshipOp(RevokeSponsorshipType.REVOKE_SPONSORSHIP_LEDGER_ENTRY) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
            ledgerKey.encode(stream)
        }
    }

    fun signerOrNull(): Signer? = if (this is Signer) this else null
    data class Signer(
        val signer: RevokeSponsorshipOpSigner,
    ) : RevokeSponsorshipOp(RevokeSponsorshipType.REVOKE_SPONSORSHIP_SIGNER) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
            signer.encode(stream)
        }
    }

    companion object : XdrElementDecoder<RevokeSponsorshipOp> {
        override fun decode(stream: XdrInputStream): RevokeSponsorshipOp {
            return when (val type = RevokeSponsorshipType.decode(stream)) {
                RevokeSponsorshipType.REVOKE_SPONSORSHIP_LEDGER_ENTRY -> {
                    val ledgerKey = LedgerKey.decode(stream)
                    LedgerEntry(ledgerKey)
                }

                RevokeSponsorshipType.REVOKE_SPONSORSHIP_SIGNER -> {
                    val signer = RevokeSponsorshipOpSigner.decode(stream)
                    Signer(signer)
                }

                else -> throw IllegalArgumentException("unknown type: $type")
            }
        }
    }

    /**
     * RevokeSponsorshipOpSigner's original definition in the XDR file is:
     * ```
     * struct
    {
    AccountID accountID;
    SignerKey signerKey;
    }
     * ```
     */
    data class RevokeSponsorshipOpSigner(
        val accountID: AccountID,
        val signerKey: SignerKey,
    ) : XdrElement {
        override fun encode(stream: XdrOutputStream) {
            accountID.encode(stream)
            signerKey.encode(stream)
        }

        companion object : XdrElementDecoder<RevokeSponsorshipOpSigner> {
            override fun decode(stream: XdrInputStream): RevokeSponsorshipOpSigner {
                val accountID = AccountID.decode(stream)
                val signerKey = SignerKey.decode(stream)
                return RevokeSponsorshipOpSigner(
                    accountID,
                    signerKey,
                )
            }
        }

    }
}
