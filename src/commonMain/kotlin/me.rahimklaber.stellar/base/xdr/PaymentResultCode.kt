// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * PaymentResultCode's original definition in the XDR file is:
 * ```
 * enum PaymentResultCode
{
// codes considered as "success" for the operation
PAYMENT_SUCCESS = 0, // payment successfully completed

// codes considered as "failure" for the operation
PAYMENT_MALFORMED = -1,          // bad input
PAYMENT_UNDERFUNDED = -2,        // not enough funds in source account
PAYMENT_SRC_NO_TRUST = -3,       // no trust line on source account
PAYMENT_SRC_NOT_AUTHORIZED = -4, // source not authorized to transfer
PAYMENT_NO_DESTINATION = -5,     // destination account does not exist
PAYMENT_NO_TRUST = -6,       // destination missing a trust line for asset
PAYMENT_NOT_AUTHORIZED = -7, // destination not authorized to hold asset
PAYMENT_LINE_FULL = -8,      // destination would go above their limit
PAYMENT_NO_ISSUER = -9       // missing issuer on asset
};
 * ```
 */
enum class PaymentResultCode(val value: Int) : XdrElement {
    PAYMENT_SUCCESS(0),
    PAYMENT_MALFORMED(-1),
    PAYMENT_UNDERFUNDED(-2),
    PAYMENT_SRC_NO_TRUST(-3),
    PAYMENT_SRC_NOT_AUTHORIZED(-4),
    PAYMENT_NO_DESTINATION(-5),
    PAYMENT_NO_TRUST(-6),
    PAYMENT_NOT_AUTHORIZED(-7),
    PAYMENT_LINE_FULL(-8),
    PAYMENT_NO_ISSUER(-9);

    companion object : XdrElementDecoder<PaymentResultCode> {
        override fun decode(stream: XdrInputStream): PaymentResultCode {
            return when (val value = stream.readInt()) {
                0 -> PAYMENT_SUCCESS
                -1 -> PAYMENT_MALFORMED
                -2 -> PAYMENT_UNDERFUNDED
                -3 -> PAYMENT_SRC_NO_TRUST
                -4 -> PAYMENT_SRC_NOT_AUTHORIZED
                -5 -> PAYMENT_NO_DESTINATION
                -6 -> PAYMENT_NO_TRUST
                -7 -> PAYMENT_NOT_AUTHORIZED
                -8 -> PAYMENT_LINE_FULL
                -9 -> PAYMENT_NO_ISSUER
                else -> throw IllegalArgumentException("Unknown enum value: " + value)
            }
        }
    }

    override fun encode(stream: XdrOutputStream) {
        stream.writeInt(value)
    }
}
