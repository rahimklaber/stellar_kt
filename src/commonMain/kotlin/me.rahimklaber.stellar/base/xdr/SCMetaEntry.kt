// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * SCMetaEntry's original definition in the XDR file is:
 * ```
 * union SCMetaEntry switch (SCMetaKind kind)
{
case SC_META_V0:
SCMetaV0 v0;
};
 * ```
 */
sealed class SCMetaEntry(val type: SCMetaKind) : XdrElement {
    fun v0OrNull(): ScMetaV0? = if (this is ScMetaV0) this else null
    data class ScMetaV0(
        val v0: SCMetaV0,
    ) : SCMetaEntry(SCMetaKind.SC_META_V0) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
            v0.encode(stream)
        }
    }

    companion object : XdrElementDecoder<SCMetaEntry> {
        override fun decode(stream: XdrInputStream): SCMetaEntry {
            return when (val type = SCMetaKind.decode(stream)) {
                SCMetaKind.SC_META_V0 -> {
                    val v0 = SCMetaV0.decode(stream)
                    ScMetaV0(v0)
                }

                else -> throw IllegalArgumentException("unknown type: $type")
            }
        }
    }
}
