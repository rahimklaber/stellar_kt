// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * CreateClaimableBalanceOp's original definition in the XDR file is:
 * ```
 * struct CreateClaimableBalanceOp
{
Asset asset;
int64 amount;
Claimant claimants<10>;
};
 * ```
 */
data class CreateClaimableBalanceOp(
    val asset: Asset,
    val amount: Int64,
    val claimants: List<Claimant>,
) : XdrElement {
    override fun encode(stream: XdrOutputStream) {
        asset.encode(stream)
        amount.encode(stream)
        val claimantsSize = claimants.size
        stream.writeInt(claimantsSize)
        claimants.encodeXdrElements(stream)
    }

    companion object : XdrElementDecoder<CreateClaimableBalanceOp> {
        override fun decode(stream: XdrInputStream): CreateClaimableBalanceOp {
            val asset = Asset.decode(stream)
            val amount = me.rahimklaber.stellar.base.xdr.Int64.decode(stream)
            val claimantsSize = stream.readInt()
            val claimants: List<Claimant> = decodeXdrElementsList(claimantsSize, stream, Claimant.decoder())
            return CreateClaimableBalanceOp(
                asset,
                amount,
                claimants,
            )
        }
    }
}
