// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * ColdArchiveBucketEntryType's original definition in the XDR file is:
 * ```
 * enum ColdArchiveBucketEntryType
{
COLD_ARCHIVE_METAENTRY     = -1,  // Bucket metadata, should come first.
COLD_ARCHIVE_ARCHIVED_LEAF = 0,   // Full LedgerEntry that was archived during the epoch
COLD_ARCHIVE_DELETED_LEAF  = 1,   // LedgerKey that was deleted during the epoch
COLD_ARCHIVE_BOUNDARY_LEAF = 2,   // Dummy leaf representing low/high bound
COLD_ARCHIVE_HASH          = 3    // Intermediary Merkle hash entry
};
 * ```
 */
enum class ColdArchiveBucketEntryType(val value: Int) : XdrElement {
    COLD_ARCHIVE_METAENTRY(-1),
    COLD_ARCHIVE_ARCHIVED_LEAF(0),
    COLD_ARCHIVE_DELETED_LEAF(1),
    COLD_ARCHIVE_BOUNDARY_LEAF(2),
    COLD_ARCHIVE_HASH(3);

    companion object : XdrElementDecoder<ColdArchiveBucketEntryType> {
        override fun decode(stream: XdrInputStream): ColdArchiveBucketEntryType {
            return when (val value = stream.readInt()) {
                -1 -> COLD_ARCHIVE_METAENTRY
                0 -> COLD_ARCHIVE_ARCHIVED_LEAF
                1 -> COLD_ARCHIVE_DELETED_LEAF
                2 -> COLD_ARCHIVE_BOUNDARY_LEAF
                3 -> COLD_ARCHIVE_HASH
                else -> throw IllegalArgumentException("Unknown enum value: " + value)
            }
        }
    }

    override fun encode(stream: XdrOutputStream) {
        stream.writeInt(value)
    }
}
