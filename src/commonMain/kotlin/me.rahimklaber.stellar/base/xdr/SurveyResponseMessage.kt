// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * SurveyResponseMessage's original definition in the XDR file is:
 * ```
 * struct SurveyResponseMessage
{
NodeID surveyorPeerID;
NodeID surveyedPeerID;
uint32 ledgerNum;
SurveyMessageCommandType commandType;
EncryptedBody encryptedBody;
};
 * ```
 */
data class SurveyResponseMessage(
    val surveyorPeerID: NodeID,
    val surveyedPeerID: NodeID,
    val ledgerNum: Uint32,
    val commandType: SurveyMessageCommandType,
    val encryptedBody: EncryptedBody,
) : XdrElement {
    override fun encode(stream: XdrOutputStream) {
        surveyorPeerID.encode(stream)
        surveyedPeerID.encode(stream)
        ledgerNum.encode(stream)
        commandType.encode(stream)
        encryptedBody.encode(stream)
    }

    companion object : XdrElementDecoder<SurveyResponseMessage> {
        override fun decode(stream: XdrInputStream): SurveyResponseMessage {
            val surveyorPeerID = NodeID.decode(stream)
            val surveyedPeerID = NodeID.decode(stream)
            val ledgerNum = me.rahimklaber.stellar.base.xdr.Uint32.decode(stream)
            val commandType = SurveyMessageCommandType.decode(stream)
            val encryptedBody = EncryptedBody.decode(stream)
            return SurveyResponseMessage(
                surveyorPeerID,
                surveyedPeerID,
                ledgerNum,
                commandType,
                encryptedBody,
            )
        }
    }
}
