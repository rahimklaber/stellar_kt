// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * TrustLineFlags's original definition in the XDR file is:
 * ```
 * enum TrustLineFlags
{
// issuer has authorized account to perform transactions with its credit
AUTHORIZED_FLAG = 1,
// issuer has authorized account to maintain and reduce liabilities for its
// credit
AUTHORIZED_TO_MAINTAIN_LIABILITIES_FLAG = 2,
// issuer has specified that it may clawback its credit, and that claimable
// balances created with its credit may also be clawed back
TRUSTLINE_CLAWBACK_ENABLED_FLAG = 4
};
 * ```
 */
enum class TrustLineFlags(val value: Int) : XdrElement {
    AUTHORIZED_FLAG(1),
    AUTHORIZED_TO_MAINTAIN_LIABILITIES_FLAG(2),
    TRUSTLINE_CLAWBACK_ENABLED_FLAG(4);

    companion object : XdrElementDecoder<TrustLineFlags> {
        override fun decode(stream: XdrInputStream): TrustLineFlags {
            return when (val value = stream.readInt()) {
                1 -> AUTHORIZED_FLAG
                2 -> AUTHORIZED_TO_MAINTAIN_LIABILITIES_FLAG
                4 -> TRUSTLINE_CLAWBACK_ENABLED_FLAG
                else -> throw IllegalArgumentException("Unknown enum value: " + value)
            }
        }
    }

    override fun encode(stream: XdrOutputStream) {
        stream.writeInt(value)
    }
}
