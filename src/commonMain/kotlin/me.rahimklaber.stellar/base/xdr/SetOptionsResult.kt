// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * SetOptionsResult's original definition in the XDR file is:
 * ```
 * union SetOptionsResult switch (SetOptionsResultCode code)
{
case SET_OPTIONS_SUCCESS:
void;
case SET_OPTIONS_LOW_RESERVE:
case SET_OPTIONS_TOO_MANY_SIGNERS:
case SET_OPTIONS_BAD_FLAGS:
case SET_OPTIONS_INVALID_INFLATION:
case SET_OPTIONS_CANT_CHANGE:
case SET_OPTIONS_UNKNOWN_FLAG:
case SET_OPTIONS_THRESHOLD_OUT_OF_RANGE:
case SET_OPTIONS_BAD_SIGNER:
case SET_OPTIONS_INVALID_HOME_DOMAIN:
case SET_OPTIONS_AUTH_REVOCABLE_REQUIRED:
void;
};
 * ```
 */
sealed class SetOptionsResult(val type: SetOptionsResultCode) : XdrElement {
    data object SetOptionsSuccess : SetOptionsResult(SetOptionsResultCode.SET_OPTIONS_SUCCESS) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
        }
    }

    data object SetOptionsLowReserve : SetOptionsResult(SetOptionsResultCode.SET_OPTIONS_LOW_RESERVE) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
        }
    }

    data object SetOptionsTooManySigners : SetOptionsResult(SetOptionsResultCode.SET_OPTIONS_TOO_MANY_SIGNERS) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
        }
    }

    data object SetOptionsBadFlags : SetOptionsResult(SetOptionsResultCode.SET_OPTIONS_BAD_FLAGS) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
        }
    }

    data object SetOptionsInvalidInflation : SetOptionsResult(SetOptionsResultCode.SET_OPTIONS_INVALID_INFLATION) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
        }
    }

    data object SetOptionsCantChange : SetOptionsResult(SetOptionsResultCode.SET_OPTIONS_CANT_CHANGE) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
        }
    }

    data object SetOptionsUnknownFlag : SetOptionsResult(SetOptionsResultCode.SET_OPTIONS_UNKNOWN_FLAG) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
        }
    }

    data object SetOptionsThresholdOutOfRange : SetOptionsResult(SetOptionsResultCode.SET_OPTIONS_THRESHOLD_OUT_OF_RANGE) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
        }
    }

    data object SetOptionsBadSigner : SetOptionsResult(SetOptionsResultCode.SET_OPTIONS_BAD_SIGNER) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
        }
    }

    data object SetOptionsInvalidHomeDomain : SetOptionsResult(SetOptionsResultCode.SET_OPTIONS_INVALID_HOME_DOMAIN) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
        }
    }

    data object SetOptionsAuthRevocableRequired : SetOptionsResult(SetOptionsResultCode.SET_OPTIONS_AUTH_REVOCABLE_REQUIRED) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
        }
    }

    companion object : XdrElementDecoder<SetOptionsResult> {
        override fun decode(stream: XdrInputStream): SetOptionsResult {
            return when (val type = SetOptionsResultCode.decode(stream)) {
                SetOptionsResultCode.SET_OPTIONS_SUCCESS -> SetOptionsSuccess
                SetOptionsResultCode.SET_OPTIONS_LOW_RESERVE -> SetOptionsLowReserve
                SetOptionsResultCode.SET_OPTIONS_TOO_MANY_SIGNERS -> SetOptionsTooManySigners
                SetOptionsResultCode.SET_OPTIONS_BAD_FLAGS -> SetOptionsBadFlags
                SetOptionsResultCode.SET_OPTIONS_INVALID_INFLATION -> SetOptionsInvalidInflation
                SetOptionsResultCode.SET_OPTIONS_CANT_CHANGE -> SetOptionsCantChange
                SetOptionsResultCode.SET_OPTIONS_UNKNOWN_FLAG -> SetOptionsUnknownFlag
                SetOptionsResultCode.SET_OPTIONS_THRESHOLD_OUT_OF_RANGE -> SetOptionsThresholdOutOfRange
                SetOptionsResultCode.SET_OPTIONS_BAD_SIGNER -> SetOptionsBadSigner
                SetOptionsResultCode.SET_OPTIONS_INVALID_HOME_DOMAIN -> SetOptionsInvalidHomeDomain
                SetOptionsResultCode.SET_OPTIONS_AUTH_REVOCABLE_REQUIRED -> SetOptionsAuthRevocableRequired
                else -> throw IllegalArgumentException("unknown type: $type")
            }
        }
    }
}
