// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * ClawbackClaimableBalanceResultCode's original definition in the XDR file is:
 * ```
 * enum ClawbackClaimableBalanceResultCode
{
// codes considered as "success" for the operation
CLAWBACK_CLAIMABLE_BALANCE_SUCCESS = 0,

// codes considered as "failure" for the operation
CLAWBACK_CLAIMABLE_BALANCE_DOES_NOT_EXIST = -1,
CLAWBACK_CLAIMABLE_BALANCE_NOT_ISSUER = -2,
CLAWBACK_CLAIMABLE_BALANCE_NOT_CLAWBACK_ENABLED = -3
};
 * ```
 */
enum class ClawbackClaimableBalanceResultCode(val value: Int) : XdrElement {
    CLAWBACK_CLAIMABLE_BALANCE_SUCCESS(0),
    CLAWBACK_CLAIMABLE_BALANCE_DOES_NOT_EXIST(-1),
    CLAWBACK_CLAIMABLE_BALANCE_NOT_ISSUER(-2),
    CLAWBACK_CLAIMABLE_BALANCE_NOT_CLAWBACK_ENABLED(-3);

    companion object : XdrElementDecoder<ClawbackClaimableBalanceResultCode> {
        override fun decode(stream: XdrInputStream): ClawbackClaimableBalanceResultCode {
            return when (val value = stream.readInt()) {
                0 -> CLAWBACK_CLAIMABLE_BALANCE_SUCCESS
                -1 -> CLAWBACK_CLAIMABLE_BALANCE_DOES_NOT_EXIST
                -2 -> CLAWBACK_CLAIMABLE_BALANCE_NOT_ISSUER
                -3 -> CLAWBACK_CLAIMABLE_BALANCE_NOT_CLAWBACK_ENABLED
                else -> throw IllegalArgumentException("Unknown enum value: " + value)
            }
        }
    }

    override fun encode(stream: XdrOutputStream) {
        stream.writeInt(value)
    }
}
