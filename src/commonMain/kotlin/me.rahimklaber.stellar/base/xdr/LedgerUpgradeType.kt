// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * LedgerUpgradeType's original definition in the XDR file is:
 * ```
 * enum LedgerUpgradeType
{
LEDGER_UPGRADE_VERSION = 1,
LEDGER_UPGRADE_BASE_FEE = 2,
LEDGER_UPGRADE_MAX_TX_SET_SIZE = 3,
LEDGER_UPGRADE_BASE_RESERVE = 4,
LEDGER_UPGRADE_FLAGS = 5,
LEDGER_UPGRADE_CONFIG = 6,
LEDGER_UPGRADE_MAX_SOROBAN_TX_SET_SIZE = 7
};
 * ```
 */
enum class LedgerUpgradeType(val value: Int) : XdrElement {
    LEDGER_UPGRADE_VERSION(1),
    LEDGER_UPGRADE_BASE_FEE(2),
    LEDGER_UPGRADE_MAX_TX_SET_SIZE(3),
    LEDGER_UPGRADE_BASE_RESERVE(4),
    LEDGER_UPGRADE_FLAGS(5),
    LEDGER_UPGRADE_CONFIG(6),
    LEDGER_UPGRADE_MAX_SOROBAN_TX_SET_SIZE(7);

    companion object : XdrElementDecoder<LedgerUpgradeType> {
        override fun decode(stream: XdrInputStream): LedgerUpgradeType {
            return when (val value = stream.readInt()) {
                1 -> LEDGER_UPGRADE_VERSION
                2 -> LEDGER_UPGRADE_BASE_FEE
                3 -> LEDGER_UPGRADE_MAX_TX_SET_SIZE
                4 -> LEDGER_UPGRADE_BASE_RESERVE
                5 -> LEDGER_UPGRADE_FLAGS
                6 -> LEDGER_UPGRADE_CONFIG
                7 -> LEDGER_UPGRADE_MAX_SOROBAN_TX_SET_SIZE
                else -> throw IllegalArgumentException("Unknown enum value: " + value)
            }
        }
    }

    override fun encode(stream: XdrOutputStream) {
        stream.writeInt(value)
    }
}
