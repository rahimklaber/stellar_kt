// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * ClaimClaimableBalanceResultCode's original definition in the XDR file is:
 * ```
 * enum ClaimClaimableBalanceResultCode
{
CLAIM_CLAIMABLE_BALANCE_SUCCESS = 0,
CLAIM_CLAIMABLE_BALANCE_DOES_NOT_EXIST = -1,
CLAIM_CLAIMABLE_BALANCE_CANNOT_CLAIM = -2,
CLAIM_CLAIMABLE_BALANCE_LINE_FULL = -3,
CLAIM_CLAIMABLE_BALANCE_NO_TRUST = -4,
CLAIM_CLAIMABLE_BALANCE_NOT_AUTHORIZED = -5
};
 * ```
 */
enum class ClaimClaimableBalanceResultCode(val value: Int) : XdrElement {
    CLAIM_CLAIMABLE_BALANCE_SUCCESS(0),
    CLAIM_CLAIMABLE_BALANCE_DOES_NOT_EXIST(-1),
    CLAIM_CLAIMABLE_BALANCE_CANNOT_CLAIM(-2),
    CLAIM_CLAIMABLE_BALANCE_LINE_FULL(-3),
    CLAIM_CLAIMABLE_BALANCE_NO_TRUST(-4),
    CLAIM_CLAIMABLE_BALANCE_NOT_AUTHORIZED(-5);

    companion object : XdrElementDecoder<ClaimClaimableBalanceResultCode> {
        override fun decode(stream: XdrInputStream): ClaimClaimableBalanceResultCode {
            return when (val value = stream.readInt()) {
                0 -> CLAIM_CLAIMABLE_BALANCE_SUCCESS
                -1 -> CLAIM_CLAIMABLE_BALANCE_DOES_NOT_EXIST
                -2 -> CLAIM_CLAIMABLE_BALANCE_CANNOT_CLAIM
                -3 -> CLAIM_CLAIMABLE_BALANCE_LINE_FULL
                -4 -> CLAIM_CLAIMABLE_BALANCE_NO_TRUST
                -5 -> CLAIM_CLAIMABLE_BALANCE_NOT_AUTHORIZED
                else -> throw IllegalArgumentException("Unknown enum value: " + value)
            }
        }
    }

    override fun encode(stream: XdrOutputStream) {
        stream.writeInt(value)
    }
}
