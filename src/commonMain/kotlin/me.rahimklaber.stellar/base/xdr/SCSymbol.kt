// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr

import kotlin.jvm.JvmInline


/**
 * SCSymbol's original definition in the XDR file is:
 * ```
 * typedef string SCSymbol<SCSYMBOL_LIMIT>;
 * ```
 */
@JvmInline
value class SCSymbol(val value: String) : XdrElement {
    init {
        require(value.length <= Constants.SCSYMBOL_LIMIT) {
            "Invalid length for SCSymbol"
        }
    }

    override fun encode(stream: XdrOutputStream) {
        val valueSize = value.length
        stream.writeInt(valueSize)
        stream.writeBytes(value.encodeToByteArray())
    }

    companion object : XdrElementDecoder<SCSymbol> {
        override fun decode(stream: XdrInputStream): SCSymbol {
            val valueSize = stream.readInt()
            val value = decodeString(valueSize, stream)
            return SCSymbol(value)
        }
    }
}
