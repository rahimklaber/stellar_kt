// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * TransactionSet's original definition in the XDR file is:
 * ```
 * struct TransactionSet
{
Hash previousLedgerHash;
TransactionEnvelope txs<>;
};
 * ```
 */
data class TransactionSet(
    val previousLedgerHash: Hash,
    val txs: List<TransactionEnvelope>,
) : XdrElement {
    override fun encode(stream: XdrOutputStream) {
        previousLedgerHash.encode(stream)
        val txsSize = txs.size
        stream.writeInt(txsSize)
        txs.encodeXdrElements(stream)
    }

    companion object : XdrElementDecoder<TransactionSet> {
        override fun decode(stream: XdrInputStream): TransactionSet {
            val previousLedgerHash = Hash.decode(stream)
            val txsSize = stream.readInt()
            val txs: List<TransactionEnvelope> = decodeXdrElementsList(txsSize, stream, TransactionEnvelope.decoder())
            return TransactionSet(
                previousLedgerHash,
                txs,
            )
        }
    }
}
