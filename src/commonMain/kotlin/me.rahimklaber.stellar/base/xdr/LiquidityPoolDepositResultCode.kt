// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * LiquidityPoolDepositResultCode's original definition in the XDR file is:
 * ```
 * enum LiquidityPoolDepositResultCode
{
// codes considered as "success" for the operation
LIQUIDITY_POOL_DEPOSIT_SUCCESS = 0,

// codes considered as "failure" for the operation
LIQUIDITY_POOL_DEPOSIT_MALFORMED = -1,      // bad input
LIQUIDITY_POOL_DEPOSIT_NO_TRUST = -2,       // no trust line for one of the
// assets
LIQUIDITY_POOL_DEPOSIT_NOT_AUTHORIZED = -3, // not authorized for one of the
// assets
LIQUIDITY_POOL_DEPOSIT_UNDERFUNDED = -4,    // not enough balance for one of
// the assets
LIQUIDITY_POOL_DEPOSIT_LINE_FULL = -5,      // pool share trust line doesn't
// have sufficient limit
LIQUIDITY_POOL_DEPOSIT_BAD_PRICE = -6,      // deposit price outside bounds
LIQUIDITY_POOL_DEPOSIT_POOL_FULL = -7       // pool reserves are full
};
 * ```
 */
enum class LiquidityPoolDepositResultCode(val value: Int) : XdrElement {
    LIQUIDITY_POOL_DEPOSIT_SUCCESS(0),
    LIQUIDITY_POOL_DEPOSIT_MALFORMED(-1),
    LIQUIDITY_POOL_DEPOSIT_NO_TRUST(-2),
    LIQUIDITY_POOL_DEPOSIT_NOT_AUTHORIZED(-3),
    LIQUIDITY_POOL_DEPOSIT_UNDERFUNDED(-4),
    LIQUIDITY_POOL_DEPOSIT_LINE_FULL(-5),
    LIQUIDITY_POOL_DEPOSIT_BAD_PRICE(-6),
    LIQUIDITY_POOL_DEPOSIT_POOL_FULL(-7);

    companion object : XdrElementDecoder<LiquidityPoolDepositResultCode> {
        override fun decode(stream: XdrInputStream): LiquidityPoolDepositResultCode {
            return when (val value = stream.readInt()) {
                0 -> LIQUIDITY_POOL_DEPOSIT_SUCCESS
                -1 -> LIQUIDITY_POOL_DEPOSIT_MALFORMED
                -2 -> LIQUIDITY_POOL_DEPOSIT_NO_TRUST
                -3 -> LIQUIDITY_POOL_DEPOSIT_NOT_AUTHORIZED
                -4 -> LIQUIDITY_POOL_DEPOSIT_UNDERFUNDED
                -5 -> LIQUIDITY_POOL_DEPOSIT_LINE_FULL
                -6 -> LIQUIDITY_POOL_DEPOSIT_BAD_PRICE
                -7 -> LIQUIDITY_POOL_DEPOSIT_POOL_FULL
                else -> throw IllegalArgumentException("Unknown enum value: " + value)
            }
        }
    }

    override fun encode(stream: XdrOutputStream) {
        stream.writeInt(value)
    }
}
