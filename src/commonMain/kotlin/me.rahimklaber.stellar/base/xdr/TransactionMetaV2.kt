// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * TransactionMetaV2's original definition in the XDR file is:
 * ```
 * struct TransactionMetaV2
{
LedgerEntryChanges txChangesBefore; // tx level changes before operations
// are applied if any
OperationMeta operations<>;         // meta for each operation
LedgerEntryChanges txChangesAfter;  // tx level changes after operations are
// applied if any
};
 * ```
 */
data class TransactionMetaV2(
    val txChangesBefore: LedgerEntryChanges,
    val operations: List<OperationMeta>,
    val txChangesAfter: LedgerEntryChanges,
) : XdrElement {
    override fun encode(stream: XdrOutputStream) {
        txChangesBefore.encode(stream)
        val operationsSize = operations.size
        stream.writeInt(operationsSize)
        operations.encodeXdrElements(stream)
        txChangesAfter.encode(stream)
    }

    companion object : XdrElementDecoder<TransactionMetaV2> {
        override fun decode(stream: XdrInputStream): TransactionMetaV2 {
            val txChangesBefore = LedgerEntryChanges.decode(stream)
            val operationsSize = stream.readInt()
            val operations: List<OperationMeta> = decodeXdrElementsList(operationsSize, stream, OperationMeta.decoder())
            val txChangesAfter = LedgerEntryChanges.decode(stream)
            return TransactionMetaV2(
                txChangesBefore,
                operations,
                txChangesAfter,
            )
        }
    }
}
