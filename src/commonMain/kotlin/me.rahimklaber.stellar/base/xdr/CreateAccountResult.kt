// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package me.rahimklaber.stellar.base.xdr


/**
 * CreateAccountResult's original definition in the XDR file is:
 * ```
 * union CreateAccountResult switch (CreateAccountResultCode code)
{
case CREATE_ACCOUNT_SUCCESS:
void;
case CREATE_ACCOUNT_MALFORMED:
case CREATE_ACCOUNT_UNDERFUNDED:
case CREATE_ACCOUNT_LOW_RESERVE:
case CREATE_ACCOUNT_ALREADY_EXIST:
void;
};
 * ```
 */
sealed class CreateAccountResult(val type: CreateAccountResultCode) : XdrElement {
    data object CreateAccountSuccess : CreateAccountResult(CreateAccountResultCode.CREATE_ACCOUNT_SUCCESS) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
        }
    }

    data object CreateAccountMalformed : CreateAccountResult(CreateAccountResultCode.CREATE_ACCOUNT_MALFORMED) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
        }
    }

    data object CreateAccountUnderfunded : CreateAccountResult(CreateAccountResultCode.CREATE_ACCOUNT_UNDERFUNDED) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
        }
    }

    data object CreateAccountLowReserve : CreateAccountResult(CreateAccountResultCode.CREATE_ACCOUNT_LOW_RESERVE) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
        }
    }

    data object CreateAccountAlreadyExist : CreateAccountResult(CreateAccountResultCode.CREATE_ACCOUNT_ALREADY_EXIST) {
        override fun encode(stream: XdrOutputStream) {
            type.encode(stream)
        }
    }

    companion object : XdrElementDecoder<CreateAccountResult> {
        override fun decode(stream: XdrInputStream): CreateAccountResult {
            return when (val type = CreateAccountResultCode.decode(stream)) {
                CreateAccountResultCode.CREATE_ACCOUNT_SUCCESS -> CreateAccountSuccess
                CreateAccountResultCode.CREATE_ACCOUNT_MALFORMED -> CreateAccountMalformed
                CreateAccountResultCode.CREATE_ACCOUNT_UNDERFUNDED -> CreateAccountUnderfunded
                CreateAccountResultCode.CREATE_ACCOUNT_LOW_RESERVE -> CreateAccountLowReserve
                CreateAccountResultCode.CREATE_ACCOUNT_ALREADY_EXIST -> CreateAccountAlreadyExist
                else -> throw IllegalArgumentException("unknown type: $type")
            }
        }
    }
}
